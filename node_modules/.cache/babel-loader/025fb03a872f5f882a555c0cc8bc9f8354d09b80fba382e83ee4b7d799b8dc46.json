{"ast":null,"code":"import _regeneratorRuntime from \"D:/web_dev/group-seckill/group-seckill-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/web_dev/group-seckill/group-seckill-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { login } from \"@/api/user\";\nexport default {\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    handleLogin: function handleLogin() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return login(_this.username, _this.password);\n            case 3:\n              response = _context.sent;\n              if (response.code === 0) {\n                alert(\"登录成功！\");\n                // 保存用户信息，跳转到首页\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n                _this.$router.push(\"/\");\n              } else {\n                alert(\"登录失败：\" + response.message);\n              }\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              alert(\"登录失败：\" + _context.t0.message);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["login","data","username","password","methods","handleLogin","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","code","alert","localStorage","setItem","JSON","stringify","$router","push","message","t0","stop"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <div class=\"login-content\">\n      <h2>用户登录</h2>\n      <form @submit.prevent=\"handleLogin\">\n        <div class=\"input-group\">\n          <label for=\"username\">用户名：</label>\n          <input type=\"text\" v-model=\"username\" id=\"username\" required placeholder=\"请输入用户名\" />\n        </div>\n        <div class=\"input-group\">\n          <label for=\"password\">密码：</label>\n          <input type=\"password\" v-model=\"password\" id=\"password\" required placeholder=\"请输入密码\" />\n        </div>\n        <button type=\"submit\" class=\"btn login-btn\">登录</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { login } from \"@/api/user\";\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await login(this.username, this.password);\n        if (response.code === 0) {\n          alert(\"登录成功！\");\n          // 保存用户信息，跳转到首页\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n          this.$router.push(\"/\");\n        } else {\n          alert(\"登录失败：\" + response.message);\n        }\n      } catch (error) {\n        alert(\"登录失败：\" + error.message);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 与 Home 页面风格保持一致的布局和样式 */\n.login {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background: linear-gradient(135deg, #67b26f, #4ca2cd);\n  font-family: 'Arial', sans-serif;\n}\n\n/* 登录框样式 */\n.login-content {\n  text-align: center;\n  background-color: white;\n  padding: 2rem 3rem;\n  border-radius: 10px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n  width: 300px;\n}\n\n/* 标题样式 */\nh2 {\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 1.5rem;\n}\n\n/* 输入框组样式 */\n.input-group {\n  margin-bottom: 1.5rem;\n  text-align: left;\n}\n\n.input-group label {\n  font-size: 1rem;\n  color: #333;\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\n.input-group input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n/* 按钮样式 */\n.btn {\n  padding: 0.75rem 2rem;\n  border-radius: 5px;\n  font-size: 1rem;\n  font-weight: bold;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  background-color: #4ca2cd;\n  color: white;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  border: none;\n}\n\n.btn:hover {\n  background-color: #fff;\n  color: #333;\n  border: 2px solid #4ca2cd;\n}\n</style>\n"],"mappings":";;;;;AAoBA,SAAAA,KAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA,WAAAA,YAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAhB,KAAA,CAAAM,KAAA,CAAAJ,QAAA,EAAAI,KAAA,CAAAH,QAAA;YAAA;cAAAQ,QAAA,GAAAG,QAAA,CAAAG,IAAA;cACA,IAAAN,QAAA,CAAAO,IAAA;gBACAC,KAAA;gBACA;gBACAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAZ,QAAA,CAAAV,IAAA;gBACAK,KAAA,CAAAkB,OAAA,CAAAC,IAAA;cACA;gBACAN,KAAA,WAAAR,QAAA,CAAAe,OAAA;cACA;cAAAZ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAEAK,KAAA,WAAAL,QAAA,CAAAa,EAAA,CAAAD,OAAA;YAAA;YAAA;cAAA,OAAAZ,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}